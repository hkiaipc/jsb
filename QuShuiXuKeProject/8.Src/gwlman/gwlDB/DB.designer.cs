#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3623
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace gwlDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="jsbGwlManDB")]
	public partial class DB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblGwl(tblGwl instance);
    partial void UpdatetblGwl(tblGwl instance);
    partial void DeletetblGwl(tblGwl instance);
    partial void InserttblWell(tblWell instance);
    partial void UpdatetblWell(tblWell instance);
    partial void DeletetblWell(tblWell instance);
    #endregion
		
		public DB() : 
				base(global::gwlDB.Properties.Settings.Default.jsbGwlManDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblGwl> tblGwl
		{
			get
			{
				return this.GetTable<tblGwl>();
			}
		}
		
		public System.Data.Linq.Table<tblWell> tblWell
		{
			get
			{
				return this.GetTable<tblWell>();
			}
		}
	}
	
	[Table(Name="dbo.tblGwl")]
	public partial class tblGwl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GwlID;
		
		private string _Serial;
		
		private string _CompanyName;
		
		private string _CompanyAddress;
		
		private string _Area;
		
		private string _LegalPerson;
		
		private string _Contact;
		
		private string _Phone;
		
		private string _Email;
		
		private string _ValidDate;
		
		private string _ApproveDate;
		
		private string _Usage;
		
		private System.Nullable<decimal> _AskingAmount;
		
		private System.Nullable<decimal> _GwAmount;
		
		private string _GwLocation;
		
		private string _GwMode;
		
		private string _WaterSourceMode;
		
		private string _BwLocation;
		
		private string _BwMode;
		
		private System.Nullable<decimal> _BwAmount;
		
		private string _BwQuality;
		
		private string _AttachmentFileName;
		
		private string _Extend;
		
		private string _Remark;
		
		private int _WellCount;
		
		private System.Data.Linq.Binary _Attachment;
		
		private EntitySet<tblWell> _tblWell;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGwlIDChanging(int value);
    partial void OnGwlIDChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnLegalPersonChanging(string value);
    partial void OnLegalPersonChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnValidDateChanging(string value);
    partial void OnValidDateChanged();
    partial void OnApproveDateChanging(string value);
    partial void OnApproveDateChanged();
    partial void OnUsageChanging(string value);
    partial void OnUsageChanged();
    partial void OnAskingAmountChanging(System.Nullable<decimal> value);
    partial void OnAskingAmountChanged();
    partial void OnGwAmountChanging(System.Nullable<decimal> value);
    partial void OnGwAmountChanged();
    partial void OnGwLocationChanging(string value);
    partial void OnGwLocationChanged();
    partial void OnGwModeChanging(string value);
    partial void OnGwModeChanged();
    partial void OnWaterSourceModeChanging(string value);
    partial void OnWaterSourceModeChanged();
    partial void OnBwLocationChanging(string value);
    partial void OnBwLocationChanged();
    partial void OnBwModeChanging(string value);
    partial void OnBwModeChanged();
    partial void OnBwAmountChanging(System.Nullable<decimal> value);
    partial void OnBwAmountChanged();
    partial void OnBwQualityChanging(string value);
    partial void OnBwQualityChanged();
    partial void OnAttachmentFileNameChanging(string value);
    partial void OnAttachmentFileNameChanged();
    partial void OnExtendChanging(string value);
    partial void OnExtendChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnWellCountChanging(int value);
    partial void OnWellCountChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    #endregion
		
		public tblGwl()
		{
			this._tblWell = new EntitySet<tblWell>(new Action<tblWell>(this.attach_tblWell), new Action<tblWell>(this.detach_tblWell));
			OnCreated();
		}
		
		[Column(Storage="_GwlID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GwlID
		{
			get
			{
				return this._GwlID;
			}
			set
			{
				if ((this._GwlID != value))
				{
					this.OnGwlIDChanging(value);
					this.SendPropertyChanging();
					this._GwlID = value;
					this.SendPropertyChanged("GwlID");
					this.OnGwlIDChanged();
				}
			}
		}
		
		[Column(Storage="_Serial", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[Column(Storage="_CompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Area", DbType="NVarChar(255)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[Column(Storage="_LegalPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LegalPerson
		{
			get
			{
				return this._LegalPerson;
			}
			set
			{
				if ((this._LegalPerson != value))
				{
					this.OnLegalPersonChanging(value);
					this.SendPropertyChanging();
					this._LegalPerson = value;
					this.SendPropertyChanged("LegalPerson");
					this.OnLegalPersonChanged();
				}
			}
		}
		
		[Column(Storage="_Contact", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ValidDate", DbType="NVarChar(255)")]
		public string ValidDate
		{
			get
			{
				return this._ValidDate;
			}
			set
			{
				if ((this._ValidDate != value))
				{
					this.OnValidDateChanging(value);
					this.SendPropertyChanging();
					this._ValidDate = value;
					this.SendPropertyChanged("ValidDate");
					this.OnValidDateChanged();
				}
			}
		}
		
		[Column(Storage="_ApproveDate", DbType="NVarChar(255)")]
		public string ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[Column(Storage="_Usage", DbType="NVarChar(255)")]
		public string Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[Column(Storage="_AskingAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AskingAmount
		{
			get
			{
				return this._AskingAmount;
			}
			set
			{
				if ((this._AskingAmount != value))
				{
					this.OnAskingAmountChanging(value);
					this.SendPropertyChanging();
					this._AskingAmount = value;
					this.SendPropertyChanged("AskingAmount");
					this.OnAskingAmountChanged();
				}
			}
		}
		
		[Column(Storage="_GwAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GwAmount
		{
			get
			{
				return this._GwAmount;
			}
			set
			{
				if ((this._GwAmount != value))
				{
					this.OnGwAmountChanging(value);
					this.SendPropertyChanging();
					this._GwAmount = value;
					this.SendPropertyChanged("GwAmount");
					this.OnGwAmountChanged();
				}
			}
		}
		
		[Column(Storage="_GwLocation", DbType="NVarChar(255)")]
		public string GwLocation
		{
			get
			{
				return this._GwLocation;
			}
			set
			{
				if ((this._GwLocation != value))
				{
					this.OnGwLocationChanging(value);
					this.SendPropertyChanging();
					this._GwLocation = value;
					this.SendPropertyChanged("GwLocation");
					this.OnGwLocationChanged();
				}
			}
		}
		
		[Column(Storage="_GwMode", DbType="NVarChar(255)")]
		public string GwMode
		{
			get
			{
				return this._GwMode;
			}
			set
			{
				if ((this._GwMode != value))
				{
					this.OnGwModeChanging(value);
					this.SendPropertyChanging();
					this._GwMode = value;
					this.SendPropertyChanged("GwMode");
					this.OnGwModeChanged();
				}
			}
		}
		
		[Column(Storage="_WaterSourceMode", DbType="NVarChar(255)")]
		public string WaterSourceMode
		{
			get
			{
				return this._WaterSourceMode;
			}
			set
			{
				if ((this._WaterSourceMode != value))
				{
					this.OnWaterSourceModeChanging(value);
					this.SendPropertyChanging();
					this._WaterSourceMode = value;
					this.SendPropertyChanged("WaterSourceMode");
					this.OnWaterSourceModeChanged();
				}
			}
		}
		
		[Column(Storage="_BwLocation", DbType="NVarChar(255)")]
		public string BwLocation
		{
			get
			{
				return this._BwLocation;
			}
			set
			{
				if ((this._BwLocation != value))
				{
					this.OnBwLocationChanging(value);
					this.SendPropertyChanging();
					this._BwLocation = value;
					this.SendPropertyChanged("BwLocation");
					this.OnBwLocationChanged();
				}
			}
		}
		
		[Column(Storage="_BwMode", DbType="NVarChar(255)")]
		public string BwMode
		{
			get
			{
				return this._BwMode;
			}
			set
			{
				if ((this._BwMode != value))
				{
					this.OnBwModeChanging(value);
					this.SendPropertyChanging();
					this._BwMode = value;
					this.SendPropertyChanged("BwMode");
					this.OnBwModeChanged();
				}
			}
		}
		
		[Column(Storage="_BwAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BwAmount
		{
			get
			{
				return this._BwAmount;
			}
			set
			{
				if ((this._BwAmount != value))
				{
					this.OnBwAmountChanging(value);
					this.SendPropertyChanging();
					this._BwAmount = value;
					this.SendPropertyChanged("BwAmount");
					this.OnBwAmountChanged();
				}
			}
		}
		
		[Column(Storage="_BwQuality", DbType="NVarChar(255)")]
		public string BwQuality
		{
			get
			{
				return this._BwQuality;
			}
			set
			{
				if ((this._BwQuality != value))
				{
					this.OnBwQualityChanging(value);
					this.SendPropertyChanging();
					this._BwQuality = value;
					this.SendPropertyChanged("BwQuality");
					this.OnBwQualityChanged();
				}
			}
		}
		
		[Column(Storage="_AttachmentFileName", DbType="NVarChar(255)")]
		public string AttachmentFileName
		{
			get
			{
				return this._AttachmentFileName;
			}
			set
			{
				if ((this._AttachmentFileName != value))
				{
					this.OnAttachmentFileNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFileName = value;
					this.SendPropertyChanged("AttachmentFileName");
					this.OnAttachmentFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_Extend", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Extend
		{
			get
			{
				return this._Extend;
			}
			set
			{
				if ((this._Extend != value))
				{
					this.OnExtendChanging(value);
					this.SendPropertyChanging();
					this._Extend = value;
					this.SendPropertyChanged("Extend");
					this.OnExtendChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_WellCount", DbType="Int NOT NULL")]
		public int WellCount
		{
			get
			{
				return this._WellCount;
			}
			set
			{
				if ((this._WellCount != value))
				{
					this.OnWellCountChanging(value);
					this.SendPropertyChanging();
					this._WellCount = value;
					this.SendPropertyChanged("WellCount");
					this.OnWellCountChanged();
				}
			}
		}
		
		[Column(Storage="_Attachment", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[Association(Name="tblGwl_tblWell", Storage="_tblWell", OtherKey="GwlID")]
		public EntitySet<tblWell> tblWell
		{
			get
			{
				return this._tblWell;
			}
			set
			{
				this._tblWell.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblWell(tblWell entity)
		{
			this.SendPropertyChanging();
			entity.tblGwl = this;
		}
		
		private void detach_tblWell(tblWell entity)
		{
			this.SendPropertyChanging();
			entity.tblGwl = null;
		}
	}
	
	[Table(Name="dbo.tblWell")]
	public partial class tblWell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WellID;
		
		private int _GwlID;
		
		private string _WellSerial;
		
		private string _WellLocation;
		
		private System.Nullable<decimal> _WellDepth;
		
		private System.Nullable<decimal> _WellDiameter;
		
		private System.Nullable<decimal> _WellExtractAmount;
		
		private System.Nullable<decimal> _WellEffluentAmount;
		
		private string _WellRemark;
		
		private EntityRef<tblGwl> _tblGwl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWellIDChanging(int value);
    partial void OnWellIDChanged();
    partial void OnGwlIDChanging(int value);
    partial void OnGwlIDChanged();
    partial void OnWellSerialChanging(string value);
    partial void OnWellSerialChanged();
    partial void OnWellLocationChanging(string value);
    partial void OnWellLocationChanged();
    partial void OnWellDepthChanging(System.Nullable<decimal> value);
    partial void OnWellDepthChanged();
    partial void OnWellDiameterChanging(System.Nullable<decimal> value);
    partial void OnWellDiameterChanged();
    partial void OnWellExtractAmountChanging(System.Nullable<decimal> value);
    partial void OnWellExtractAmountChanged();
    partial void OnWellEffluentAmountChanging(System.Nullable<decimal> value);
    partial void OnWellEffluentAmountChanged();
    partial void OnWellRemarkChanging(string value);
    partial void OnWellRemarkChanged();
    #endregion
		
		public tblWell()
		{
			this._tblGwl = default(EntityRef<tblGwl>);
			OnCreated();
		}
		
		[Column(Storage="_WellID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WellID
		{
			get
			{
				return this._WellID;
			}
			set
			{
				if ((this._WellID != value))
				{
					this.OnWellIDChanging(value);
					this.SendPropertyChanging();
					this._WellID = value;
					this.SendPropertyChanged("WellID");
					this.OnWellIDChanged();
				}
			}
		}
		
		[Column(Storage="_GwlID", DbType="Int NOT NULL")]
		public int GwlID
		{
			get
			{
				return this._GwlID;
			}
			set
			{
				if ((this._GwlID != value))
				{
					if (this._tblGwl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGwlIDChanging(value);
					this.SendPropertyChanging();
					this._GwlID = value;
					this.SendPropertyChanged("GwlID");
					this.OnGwlIDChanged();
				}
			}
		}
		
		[Column(Storage="_WellSerial", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WellSerial
		{
			get
			{
				return this._WellSerial;
			}
			set
			{
				if ((this._WellSerial != value))
				{
					this.OnWellSerialChanging(value);
					this.SendPropertyChanging();
					this._WellSerial = value;
					this.SendPropertyChanged("WellSerial");
					this.OnWellSerialChanged();
				}
			}
		}
		
		[Column(Storage="_WellLocation", DbType="NVarChar(255)")]
		public string WellLocation
		{
			get
			{
				return this._WellLocation;
			}
			set
			{
				if ((this._WellLocation != value))
				{
					this.OnWellLocationChanging(value);
					this.SendPropertyChanging();
					this._WellLocation = value;
					this.SendPropertyChanged("WellLocation");
					this.OnWellLocationChanged();
				}
			}
		}
		
		[Column(Storage="_WellDepth", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WellDepth
		{
			get
			{
				return this._WellDepth;
			}
			set
			{
				if ((this._WellDepth != value))
				{
					this.OnWellDepthChanging(value);
					this.SendPropertyChanging();
					this._WellDepth = value;
					this.SendPropertyChanged("WellDepth");
					this.OnWellDepthChanged();
				}
			}
		}
		
		[Column(Storage="_WellDiameter", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WellDiameter
		{
			get
			{
				return this._WellDiameter;
			}
			set
			{
				if ((this._WellDiameter != value))
				{
					this.OnWellDiameterChanging(value);
					this.SendPropertyChanging();
					this._WellDiameter = value;
					this.SendPropertyChanged("WellDiameter");
					this.OnWellDiameterChanged();
				}
			}
		}
		
		[Column(Storage="_WellExtractAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WellExtractAmount
		{
			get
			{
				return this._WellExtractAmount;
			}
			set
			{
				if ((this._WellExtractAmount != value))
				{
					this.OnWellExtractAmountChanging(value);
					this.SendPropertyChanging();
					this._WellExtractAmount = value;
					this.SendPropertyChanged("WellExtractAmount");
					this.OnWellExtractAmountChanged();
				}
			}
		}
		
		[Column(Storage="_WellEffluentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WellEffluentAmount
		{
			get
			{
				return this._WellEffluentAmount;
			}
			set
			{
				if ((this._WellEffluentAmount != value))
				{
					this.OnWellEffluentAmountChanging(value);
					this.SendPropertyChanging();
					this._WellEffluentAmount = value;
					this.SendPropertyChanged("WellEffluentAmount");
					this.OnWellEffluentAmountChanged();
				}
			}
		}
		
		[Column(Storage="_WellRemark", DbType="NVarChar(2000)")]
		public string WellRemark
		{
			get
			{
				return this._WellRemark;
			}
			set
			{
				if ((this._WellRemark != value))
				{
					this.OnWellRemarkChanging(value);
					this.SendPropertyChanging();
					this._WellRemark = value;
					this.SendPropertyChanged("WellRemark");
					this.OnWellRemarkChanged();
				}
			}
		}
		
		[Association(Name="tblGwl_tblWell", Storage="_tblGwl", ThisKey="GwlID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblGwl tblGwl
		{
			get
			{
				return this._tblGwl.Entity;
			}
			set
			{
				tblGwl previousValue = this._tblGwl.Entity;
				if (((previousValue != value) 
							|| (this._tblGwl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGwl.Entity = null;
						previousValue.tblWell.Remove(this);
					}
					this._tblGwl.Entity = value;
					if ((value != null))
					{
						value.tblWell.Add(this);
						this._GwlID = value.GwlID;
					}
					else
					{
						this._GwlID = default(int);
					}
					this.SendPropertyChanged("tblGwl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
